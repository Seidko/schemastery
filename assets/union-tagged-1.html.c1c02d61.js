import{_ as s,o as n,c as a,e as l}from"./app.7d616349.js";const p={},o=l(`<h1 id="union-tagged-1" tabindex="-1"><a class="header-anchor" href="#union-tagged-1" aria-hidden="true">#</a> Union (Tagged 1)</h1><p>\u4E00\u79CD\u6BD4\u8F83\u590D\u6742\u7684\u573A\u666F\u662F\u4EE5\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C\u786E\u5B9A\u5BF9\u8C61\u7684\u5176\u4ED6\u5C5E\u6027\u7684\u7C7B\u578B\u3002\u5584\u7528 Intersect \u548C Union\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u8F7B\u677E\u5B9E\u73B0\u8868\u5355\u9879\u7684\u8054\u52A8\u6548\u679C\uFF01\u8BD5\u7740\u5207\u6362 <code>type</code> \u7684\u53D6\u503C\uFF0C\u5E76\u89C2\u5BDF\u4E0B\u65B9\u8868\u5355\u9879\u7684\u53D8\u5316\u5427\u3002</p><div class="language-typescript ext-ts"><pre class="shiki" style="background-color:#282c34;"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">intersect</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">object</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">shared</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">union</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">]).</span><span style="color:#61AFEF;">required</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  }).</span><span style="color:#61AFEF;">description</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;\u57FA\u7840\u914D\u7F6E&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">union</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">object</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">const</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">required</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">number</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">default</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">114514</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    }).</span><span style="color:#61AFEF;">description</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;\u7279\u6B8A\u914D\u7F6E 1&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">object</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">const</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">required</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">    }).</span><span style="color:#61AFEF;">description</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;\u7279\u6B8A\u914D\u7F6E 2&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]),</span></span>
<span class="line"><span style="color:#ABB2BF;">])</span></span>
<span class="line"></span></code></pre></div>`,3),e=[o];function B(c,t){return n(),a("div",null,e)}var y=s(p,[["render",B],["__file","union-tagged-1.html.vue"]]);export{y as default};
